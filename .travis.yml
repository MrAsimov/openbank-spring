#
# Copyright 2021 JSquad AB
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

dist: focal

services:
  - docker

cache:
  directories:
    - .autoconf
    - $HOME/.m2

before_install:
  - echo $JAVA_HOME
  - which java
  - sudo rm -rf /usr/local/lib/jvm/
  - sudo apt-get install -y openjdk-11-jdk-headless
  - export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/
  - which java
  - java -version
  - $JAVA_HOME/bin/java -version
  - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
  - sudo curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
  - sudo chmod +x /usr/local/bin/docker-compose
  - sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
  - wget https://archive.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.zip
  - unzip -qq apache-maven-3.6.1-bin.zip
  - export M2_HOME=$PWD/apache-maven-3.6.1
  - export PATH=$M2_HOME/bin:$PATH
  - source setup_environment_variables.sh
  - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  - sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
  - sudo apt-get update
  - sudo apt-get install kubectl=1.20.1-00 -y
  - curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
  - sudo apt-get install apt-transport-https --yes
  - echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
  - sudo apt-get update
  - sudo apt-get install helm -y
  - sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common wget -y
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get install docker-ce docker-ce-cli containerd.io -y
  - docker --version
  - docker run hello-world

jobs:
  include:
    - stage: build and run unit/system tests
      script:
        - travis_wait 30 mvn clean install
    - stage: run integration tests in Docker
      script:
        - mvn clean install -DskipTests
        - source setup_docker_integration_environment.sh
        - docker-compose -f service/src/test/resources/docker-compose-int.yaml build --force
        - travis_wait 30 cd service && mvn test -Dtest=*IT && cd ..
    - stage: run integration tests in Kubernetes
      script:
        - source setup_kubernetes_integration_environment.sh
        - docker-compose -f service/src/test/resources/docker-compose-k8-integration.yaml build --force
        - travis_wait 60 cd service && mvn test -Dtest=*IT && cd ..
        - docker rm -vf $(docker ps -a -q)
    - stage: push OpenBank to dockerhub on master branch after an merge
      if: branch = master
      script:
        - mvn clean install -DskipTests
        - cd service && docker build -f Dockerfile --no-cache -t openbank-spring .
        - docker tag openbank-spring:latest jsquadab/openbank-spring:latest
        - docker push jsquadab/openbank-spring:latest
env:
  global:
    - SH=bash
    - secure: FzaylBC/qmTKgDzoQDyvHcvM6/Vw+QMfLUZ2EUuQnAFyyHJI+4X2NzrA5+lQRf5mGfA+85fLwXT6ZtWEi8glBHgGLlTsyUOZJL+XbaDUH3kfSN5vQoNTw8Ewj0CIq0TeiETg6Qr3PrXw2qzXPhogXctOtNnZuU8aBAbEybB5LkhUqrcF0aIdzZeGIqZB+CbvqAjqIQyxGM+FWUCeW7PDjD6SaW8lgXBga+Cif1TMjShtrsyCXqhVW9PLf3g+aruZJKx6FpZFObUO4bd6GOPvjHscPJsUBAuBk/3mk/ZJleo/YQl6yEklI9HV8WeALmbqGGq9JRsltfSDCdbO+HfYZO9UrFSM6f+FdArodDZXMKHMKyiwcu3c/s7R1USk6zWNoiS9QRdjjzq3zr6Z8N2G1uRefPax9LpCgR9gXXpQYT/z4DRwhjOYhfMSUpFCL3bkwPouGS68db4lxmfKDQkMfhVBONFvcHnsHvZaaJ8LoP3t6j5Wl2fsuWGjfrnjWE6HhGYG0bxywIGeqKxRonI2y9M6kQ9I534Is6xNvOxPNxDEcC3CthRywj2IGJx+L9D1qcFIBsdMuuLw9ZwrnOxLVkq2BXceVZxUQUL9XHWAE8laaZKGdxOdD92/z5M/2mWjp7PnDDsmss2S/sQ5tw7RMMEsXUI34Fod2nq2Q/+akM0=
