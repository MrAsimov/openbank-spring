<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2020 JSquad AB
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>se.jsquad</groupId>
	<artifactId>openbank-spring</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>openbank-spring</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		<springdoc.openapi.version>1.1.49</springdoc.openapi.version>
		<maven.surefire.version>2.22.2</maven.surefire.version>
		<micrometer.version>1.3.2</micrometer.version>
		<spring.version>5.2.6.RELEASE</spring.version>
		<rest.assured.version>4.0.0</rest.assured.version>
		<hibernate.ehcache.version>5.4.2.Final</hibernate.ehcache.version>
		<h2.version>1.4.199</h2.version>
		<javax.inject.version>1</javax.inject.version>
		<mysql.connector.java.version>8.0.17</mysql.connector.java.version>
		<jasypt.spring.boot.starter.version>2.1.2</jasypt.spring.boot.starter.version>
		<flywaydb.version>5.2.4</flywaydb.version>
		<hibernate.validator.version>6.0.17.Final</hibernate.validator.version>
		<mockserver.version>5.7.0</mockserver.version>
		<testcontainers.junit.version>1.12.5</testcontainers.junit.version>
		<gson.version>2.8.5</gson.version>
		<okhttp3.version>4.2.2</okhttp3.version>
		<jaxws.ri.version>2.3.0</jaxws.ri.version>
		<mojo.jaxb2.version>2.4</mojo.jaxb2.version>
		<jaxb2.annotate.test.version>1.0.0</jaxb2.annotate.test.version>
		<jaxb2.basics.annotate.version>1.0.2</jaxb2.basics.annotate.version>
		<jaxb.xjc.version>2.3.2</jaxb.xjc.version>
		<jakarta.activation.version>1.2.1</jakarta.activation.version>
		<jaxb2.fluent.version>3.0</jaxb2.fluent.version>
		<maven.antrun.plugin.version>1.8</maven.antrun.plugin.version>
		<build.helper.maven.version>3.0.0</build.helper.maven.version>
		<exec.maven.plugin.version>1.6.0</exec.maven.plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${micrometer.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.ehcache.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-activemq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-core</artifactId>
			<version>${springdoc.openapi.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax.inject.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>${jasypt.spring.boot.starter.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.java.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flywaydb.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-ri</artifactId>
			<version>${jaxws.ri.version}</version>
			<type>pom</type>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.woodstox</groupId>
					<artifactId>woodstox-core-asl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jvnet.staxex</groupId>
					<artifactId>stax-ex</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.xml.messaging.saaj</groupId>
					<artifactId>saaj-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Test dependicies -->
		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-client-java</artifactId>
			<version>${mockserver.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest.assured.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>json-path</artifactId>
			<version>${rest.assured.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>xml-path</artifactId>
			<version>${rest.assured.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>${okhttp3.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>${okhttp3.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- JUnit 5 requires Surefire version 2.22.1 or higher -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>${mojo.jaxb2.version}</version>
				<executions>
					<execution>
						<id>xjc</id>
						<goals>
							<goal>xjc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<arguments>
						<argument>-Xannotate</argument>
					</arguments>
					<extension>true</extension>
					<sources>
						<source>${project.basedir}/src/main/resources/schema/xsd/system-status.xsd</source>
						<source>${project.basedir}/src/main/resources/schema/xsd/dummy.xsd</source>
						<source>${project.basedir}/src/main/resources/schema/xsd/batch-status.xsd</source>
						<source>${project.basedir}/src/main/resources/schema/xsd/date-time.xsd</source>
						<source>${project.basedir}/src/main/resources/schema/xsd/client-information.xsd</source>
					</sources>
					<clearOutputDir>false</clearOutputDir>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.springdoc</groupId>
						<artifactId>springdoc-openapi-core</artifactId>
						<version>${springdoc.openapi.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jvnet.jaxb2_commons</groupId>
						<artifactId>jaxb2-annotate-plugin-test-annox-annotations</artifactId>
						<version>${jaxb2.annotate.test.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jvnet.jaxb2_commons</groupId>
						<artifactId>jaxb2-basics-annotate</artifactId>
						<version>${jaxb2.basics.annotate.version}</version>
					</dependency>
					<dependency>
						<groupId>org.glassfish.jaxb</groupId>
						<artifactId>jaxb-xjc</artifactId>
						<version>${jaxb.xjc.version}</version>
					</dependency>
					<dependency>
						<groupId>com.sun.activation</groupId>
						<artifactId>jakarta.activation</artifactId>
						<version>${jakarta.activation.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jvnet.jaxb2_commons</groupId>
						<artifactId>jaxb2-fluent-api</artifactId>
						<version>${jaxb2.fluent.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven.antrun.plugin.version}</version>
				<executions>
					<execution>
						<id>createWsImportDir</id>
						<phase>generate-sources</phase>
						<configuration>
							<tasks>
								<mkdir dir="target/generated-sources/wsimport"/>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build.helper.maven.version}</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/wsimport</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>firstFile</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-classpath</argument>
								<classpath/>
								<argument>com.sun.tools.ws.WsImport</argument>
								<argument>-extension</argument>
								<argument>-Xnocompile</argument>
								<argument>-wsdllocation</argument>
								<argument>/GetClient.wsdl</argument>
								<argument>-s</argument>
								<argument>target/generated-sources/wsimport</argument>
								<argument>src/main/resources/schema/wsdl/GetClient.wsdl</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>integrationtests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Run integration tests (*IT) -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven.surefire.version}</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						</configuration>
					</plugin>
					<!-- JUnit 5 requires Surefire version 2.22.1 or higher -->
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.version}</version>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
